#version 130	

uniform float time;
uniform float width, height;
uniform sampler2D colors, pos, uvs, normals, depth;

vec3 lightPos = vec3(100*sin(time*3.0), -50, 100*cos(time*3.0));
vec3 lightDir = (0.0, -0.3, -1.5) - lightPos;

in vec2 sceneuv;

void main()  
{  
    float timeBig = (sin(time/3.0) * 0.5 + 0.5);
    if(timeBig > 0.9) gl_FragColor = texture(colors, sceneuv);
    else if(timeBig > 0.7) gl_FragColor = texture(pos, sceneuv);
    else if(timeBig > 0.4) gl_FragColor = texture(uvs, sceneuv);
    else if(timeBig > 0.1) gl_FragColor = texture(normals, sceneuv);
    else gl_FragColor = texture(depth, sceneuv);
    gl_FragColor = texture(pos, sceneuv);

    vec3 position = texture(pos, sceneuv).xyz;
    vec3 normal = texture(normals, sceneuv).xyz;

    vec3 vertexToLight = normalize(lightPos - position); 
    float lightIntensity = clamp(dot(vertexToLight, normalize(normal)), 0.0, 1.0);
    
    float isBg = texture(depth, sceneuv).x > 0.99 ? 1.0 : 0.0;
    if(isBg > 0.99) gl_FragColor = texture(colors, sceneuv);
    else gl_FragColor = vec4(texture(colors, sceneuv).xyz * lightIntensity, 1.0);
}

